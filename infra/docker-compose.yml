version: '3.8'

volumes:
  pg_data:
  static:
  media:


services:
  db:
    container_name: foodgram_db
    image: postgres:13
    volumes:
      - pg_data:/var/lib/postgresql/data/
    env_file: .env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

  backend:
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/api/" ]
      interval: 30s
      timeout: 10s
      retries: 3
    container_name: foodgram_backend
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings
    depends_on:
      db:
        condition: service_healthy
    image: dmitrievigor/foodgram_backend:latest
    env_file: .env
    volumes:
      - static:/app/static/
      - media:/app/media/
    restart: always

  frontend:
    container_name: foodgram_frontend
    image: dmitrievigor/foodgram_frontend:latest
    volumes:
      - static:/app/static/frontend/
    command: sh -c "mkdir -p /app/static/frontend/ && rm -rf /app/static/frontend/* && cp -r /app/build/. /app/static/frontend/"

  nginx:
    container_name: foodgram_nginx
    image: nginx:1.25.4-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static:/app/static
      - media:/app/media
    depends_on:
      - backend
      - frontend
    restart: always
