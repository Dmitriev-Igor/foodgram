version: '3.8' # Можно оставить, но лучше удалить (современные версии Compose игнорируют version)

volumes:
  pg_data:
  static:
  media:


services:
  db:
    container_name: foodgram_db
    image: postgres:13
    volumes:
      - pg_data:/var/lib/postgresql/data/
    env_file: .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

  backend:
    container_name: foodgram_backend
    image: dmitrievigor/foodgram_backend:latest # Используем переменную из .env
    command: >
      sh -c "python manage.py migrate && python manage.py collectstatic --noinput && gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings
    env_file: .env
    volumes:
      - static:/app/static/
      - media:/app/media/
    depends_on:
      db:
        condition: service_healthy
    restart: always

  frontend:  
    container_name: foodgram-front  
    build: ../frontend  
    volumes:  
      - ../frontend/:/app/result_build/
      
  nginx:
    container_name: foodgram_nginx
    image: nginx:1.25.4-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf # Относительный путь
      - static:/app/static
      - media:/app/media
    depends_on:
      - backend
      - frontend
    restart: always
